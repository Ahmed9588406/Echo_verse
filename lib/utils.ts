import { type ClassValue, clsx } from "clsx";
import { twMerge } from "tailwind-merge";

// generated by shadcn
export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}

// functoin that checks if an image is base64
export function isBase64Image(imageData: string) {
  const base64Regex = /^data:image\/(png|jpe?g|gif|webp);base64,/;
  return base64Regex.test(imageData);
}

/*
 function takes a string representing a date, converts it to a Date object,
 formats the date and time separately using toLocaleDateString and toLocaleTimeString methods,
 and then combines them into a single string.
 This function can be useful for displaying human-readable date and time information in a localized format
*/
export function formatDateString(dateString: string) {
  const options: Intl.DateTimeFormatOptions = {
    year: "numeric",
    month: "short",
    day: "numeric",
  };

  const date = new Date(dateString);
  const formattedDate = date.toLocaleDateString(undefined, options);

  const time = date.toLocaleTimeString([], {
    hour: "numeric",
    minute: "2-digit",
  });

  return `${time} - ${formattedDate}`;
}



/*
function takes a numeric count as input and returns a string indicating the count of posts in a human-readable format.
It handles the special case where the count is zero,
providing a custom message, and formats the count with the appropriate term ("Post" or "Posts") for counts greater than zero
*/
export function formatPostCount(count: number): string {
  if (count === 0) {
    return "No Posts";
  } else {
    const postdCount = count.toString().padStart(2, "0");
    const postWord = count === 1 ? "Post" : "Posts";
    return `${postdCount} ${postWord}`;
  }
}